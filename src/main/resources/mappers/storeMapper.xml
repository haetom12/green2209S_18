<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.spring.green2209S_18.dao.StoreDAO">
	
	<select id="getStoreIdCheck" resultType="com.spring.green2209S_18.vo.StoreVO">
		select * from store where storeMid = #{storeMid};
	</select>

	<select id="getStoreMenu" resultType="com.spring.green2209S_18.vo.StoreVO">
		select * from store where idx = #{idx};
	</select>

	<select id="getStoreCategory" resultType="com.spring.green2209S_18.vo.StoreVO">
		select * from categoryStore order by categoryStoreCode;
	</select>

	<select id="getNearMapStoreList" resultType="com.spring.green2209S_18.vo.StoreVO">
		select * from store <if test='storePart !="" '> where storePart = #{storePart} </if>;
	</select>
	
	<select id="getStoreFood" resultType="com.spring.green2209S_18.vo.FoodMenuVO">
		select * from storeFoodMenu where foodName = #{foodName} and admintag = 'O';
	</select>

	<select id="getStoreList" resultType="com.spring.green2209S_18.vo.StoreVO">
		select s.*, (select round(AVG(r.reviewStar), 1) from rating r where s.storeName = r.storeName and s.storeDel = 'NO') 
		as rateAvg from store s where s.storePart = #{storePart} and s.storeDel = 'NO' 
		<if test='ordered !="" '> order by ${ordered} desc</if> limit #{startIndexNo},#{pageSize};
	</select>

	<select id="getStoreFoodMenu" resultType="com.spring.green2209S_18.vo.FoodMenuVO">
		select * from storeFoodMenu where storeName = #{storeName};
	</select>

	<select id="getCheckTagList" resultType="com.spring.green2209S_18.vo.FoodMenuVO">
		select * from storeFoodMenu where foodTag = #{foodTag} and storeName = #{storeName} and admintag = 'O';
	</select>

	<select id="getChecksubTagList" resultType="com.spring.green2209S_18.vo.FoodMenuVO">
		select * from storeFoodSubMenu where foodTag = #{foodTag} and storeName = #{storeName} and admintag = 'O';
	</select>

	<select id="getAdminStoreBrand" resultType="com.spring.green2209S_18.vo.StoreVO">
		select * from adminstorebrand where storePart = #{storePart};
	</select>
	
	<select id="getstoreMenuList" resultType="com.spring.green2209S_18.vo.FoodMenuVO">
		select * from adminfoodmenu where brandName = #{brandName}; 
		<!-- select * from adminfoodmenu a, storeFoodMenu s  where a.brandName = #{brandName} group by a.foodName having s.storeName = #{storeName} and a.foodName != s.foodName; -->
	</select>
	
	<select id="getAdminStoreMenu" resultType="com.spring.green2209S_18.vo.FoodMenuVO">
		select * from adminfoodmenu where menuIdx = #{menuIdx};
	</select>

	<select id="getAdminStoreTag" resultType="com.spring.green2209S_18.vo.FoodMenuVO">
		select * from adminstoretag where brandName = #{brandName};
	</select>

	<select id="getCheckStoreTagList" resultType="com.spring.green2209S_18.vo.FoodMenuVO">
		select * from storetag where foodTag = #{foodTag} and storeName = #{storeName};
	</select>

	<select id="getstoreTagList" resultType="com.spring.green2209S_18.vo.FoodMenuVO">
		select * from storetag where storeName = #{storeName};
	</select>

	<select id="getStoreFoodMenuByTag" resultType="com.spring.green2209S_18.vo.FoodMenuVO">
		select * from storeFoodMenu where storeName = #{storeName} <if test="foodTag != ''"> and foodTag = #{foodTag} </if> ;
	</select>

	<select id="getStoreFoodMenu2" resultType="com.spring.green2209S_18.vo.FoodMenuVO">
		select * from storeFoodMenu where storeName = #{storeName} <if test="foodTag != ''"> and foodTag = #{foodTag} </if> limit #{startIndexNo},#{pageSize} ;
	</select>

	<select id="storeFoodNameCheck" resultType="com.spring.green2209S_18.vo.FoodMenuVO">
		select * from storeFoodMenu where storeName = #{storeName} and foodName = #{foodName};
	</select>

	<select id="storefoodTagCheck" resultType="com.spring.green2209S_18.vo.FoodMenuVO">
		select * from storetag where storeName = #{storeName} and foodTag = #{foodTag};
	</select>

	<select id="getstoreSubMenuList" resultType="com.spring.green2209S_18.vo.SubFoodMenuVO">
		select * from storefoodsubmenu where storeName = #{storeName} and foodTag = #{foodTag};
	</select>

	<select id="storeSubMenuNameCheck" resultType="com.spring.green2209S_18.vo.SubFoodMenuVO">
		select * from storefoodsubmenu where storeName = #{storeName} and foodTag = #{foodTag} and subMenuName = #{subMenuName};
	</select>

	<select id="getSubMenuInfo" resultType="com.spring.green2209S_18.vo.SubFoodMenuVO">
		select * from storefoodsubmenu where subMenuIdx = #{subMenuIdx};
	</select>

	<select id="getfoodInfo" resultType="com.spring.green2209S_18.vo.FoodMenuVO">
		select * from storeFoodMenu where menuIdx = #{menuIdx};
	</select>

	<select id="getFoodInfo" resultType="com.spring.green2209S_18.vo.FoodMenuVO">
		select * from storeFoodMenu where menuIdx = #{menuIdx};
	</select>

	<select id="getstoreInfo" resultType="com.spring.green2209S_18.vo.StoreVO">
		select * from store where storeName = #{storeName};
	</select>

	 <select id="getRatingList" resultType="com.spring.green2209S_18.vo.RatingVO">
  	select * from rating where storeName = #{storeName} order by idx desc limit #{startIndexNo},#{pageSize};
  </select>

	 <select id="totRatingCnt" resultType="int">
  	select count(*) from store where storePart=#{storePart};
  </select>

	 <select id="getRatingInfo" resultType="com.spring.green2209S_18.vo.RatingVO">
  	select * from rating where idx=#{idx};
  </select>

	 <select id="totStoreMenuCnt" resultType="int">
  	select count(*) from storefoodmenu where storeName=#{storeName} <if test="foodTag != ''"> and foodTag = #{foodTag} </if>;
  </select>

	 <select id="getRatingReply" resultType="com.spring.green2209S_18.vo.ratingReplyVO">
  	select * from ratingreply where ratingIdx=#{idx};
  </select>

	 <select id="getRatingCommentList" resultType="com.spring.green2209S_18.vo.ratingReplyVO">
  	<!-- select *, (count(*) from ratingreply where ratingIdx=#{idx}) as replyCnt from ratingreply where ratingIdx=#{idx} and replylevel = 0 or replylevel = 3; -->
  	select *, (select count(*) from ratingreply where replyIdx=#{idx}) as replyCnt from ratingreply where ratingIdx=#{idx} and replylevel = 0 or replylevel = 3;
  </select>

	 <select id="getRatingCommentList2" resultType="com.spring.green2209S_18.vo.ratingReplyVO">
  	select * from ratingreply where ratingIdx=#{ratingIdx} and replylevel = 1 and replyIdx=#{idx};
  </select>

	 <select id="getReplyComment" resultType="com.spring.green2209S_18.vo.ratingReplyVO">
  	select * from ratingreply where idx=#{idx};
  </select>

	 <select id="getReplyParent" resultType="com.spring.green2209S_18.vo.ratingReplyVO">
  	select * from ratingreply where replyIdx=#{idx};
  </select>

	 <select id="getCheckStoreName" resultType="com.spring.green2209S_18.vo.StoreVO">
  	select * from store where storeName=#{storeName};
  </select>

	 <select id="getSaleFoodList" resultType="com.spring.green2209S_18.vo.FoodMenuVO">
  	select * from storefoodmenu where <![CDATA[salePrice > 1]]> order by salePrice desc limit 8;
  </select>

	 <select id="getMidFind" resultType="com.spring.green2209S_18.vo.StoreVO">
  	select * from store where HostName=#{HostName} and storeEmail = #{storeEmail};
  </select>

	 <select id="getPwdFind" resultType="com.spring.green2209S_18.vo.StoreVO">
  	select * from store where storeMid=#{storeMid} and storeEmail = #{storeEmail};
  </select>

	 <select id="totStoreOrderListCnt" resultType="int">
  	select count(*) from foodorder where storeName = #{storeName};
  </select>

	 <select id="getShopOrderListList" resultType="com.spring.green2209S_18.vo.CartVO">
  	select * from foodorder where storeName = #{storeName} order by idx desc limit #{startIndexNo},#{pageSize};
  </select>
	
	
	
	<insert id="setStoreJoinOk">
		insert into store values (default, #{vo.storeName}, #{vo.storePart}, #{vo.storeNumber}, #{vo.storeMid}, #{vo.storePwd}, #{vo.hostName}, #{vo.storeAddress}, #{vo.logoPhoto}, #{vo.storeEmail}, #{vo.storeLatitude}, #{vo.storeLongitude}, default, #{vo.storeTime}, #{vo.deliverCost}, #{vo.minPrice}, default);
	</insert>
	
	<insert id="setAdminStoreTag">
		insert into storetag values (default, #{storeName}, #{foodTag} , default);
	</insert>
	
	<insert id="setAdminStoreMenu">
		insert into storefoodmenu values (default, #{storeName}, #{vo.foodName}, #{vo.foodTag}, #{vo.price}, #{vo.runOut}, #{vo.sale}, #{vo.salePercent}, #{vo.salePrice}, #{vo.foodPhoto}, #{vo.subMenu}, #{vo.foodInfo}, default);
	</insert>
	
	<insert id="setAdminStoreSubMenu">
		insert into storefoodsubmenu values (#{storeName}, default, #{vo.foodTag}, #{vo.subMenuName}, #{vo.price}, #{vo.runOut});
	</insert>
	
	<insert id="setStoreMenuInput">
		insert into storefoodmenu values (default, #{vo.storeName}, #{vo.foodName}, #{vo.foodTag}, #{vo.price}, default, default, default, default, #{vo.foodPhoto}, #{vo.subMenu}, #{vo.foodInfo}, #{vo.admintag});
	</insert>
	
	<insert id="setStoreTagInput">
		insert into storetag values (default, #{vo.storeName}, #{vo.foodTag}, 'X');
	</insert>
	
	<insert id="setStoreSubMenuInput">
		insert into storefoodsubmenu values (#{vo.storeName}, default, #{vo.foodTag}, #{vo.subMenuName}, ${vo.price}, default);
	</insert>
	
	<insert id="setRatingReplyInput">
		<!-- insert into ratingreply values (default, #{vo.ratingIdx}, #{vo.mid}, #{vo.nickName}, default, #{vo.content}, default); -->
		insert into ratingreply (idx, ratingIdx, mid, nickName, writeDate, content, replylevel, reportCnt) values (default, #{vo.ratingIdx}, #{vo.mid}, #{vo.nickName}, default, #{vo.content}, default, default) ;
	</insert>
	
	<insert id="setRatingReReplyInput">
		insert into ratingreply (idx, ratingIdx, mid, nickName, writeDate, content, replylevel, replyIdx, reportCnt) values (default, #{vo.ratingIdx}, #{vo.mid}, #{vo.nickName}, default, #{vo.content}, 1, #{vo.replyIdx}, default);
	</insert>
	
	
	
	
	<update id="setStoreMenuUpdate">
		update storeFoodMenu set foodName = #{vo.foodName}, foodTag = #{vo.foodTag}, price = #{vo.price}, runOut = #{vo.runOut}, sale = #{vo.sale}, salePrice = #{vo.salePrice}, foodPhoto = #{vo.foodPhoto}, subMenu = #{vo.subMenu}, foodInfo = #{vo.foodInfo} where foodName = #{pastFoodName} and admintag = 'O';
	</update>
	
	<update id="setfoodMenuUpdate">
		update storefoodmenu set foodName = #{vo.foodName}, foodTag = #{vo.foodTag}, price = #{vo.price}, runOut = #{vo.runOut}, sale = #{vo.sale}, salePrice = #{vo.salePrice}, foodPhoto = #{vo.foodPhoto}, subMenu = #{vo.subMenu}, foodInfo = #{vo.foodInfo} where menuIdx = #{vo.menuIdx};
	</update>
	
	<update id="setStoreTagUpdate">
		update storetag set foodTag = #{vo.foodTag} where idx = #{vo.idx};
		update storefoodmenu set foodTag = #{vo.foodTag} where foodTag = #{oldTag} and storeName = #{storeName};
		update storefoodsubmenu set foodTag = #{vo.foodTag} where foodTag = #{oldTag} and storeName = #{storeName};
	</update>
	
	<update id="setSubMenuUpdateOk">
		update storefoodsubmenu set subMenuName = #{vo.subMenuName}, price = #{vo.price} where subMenuIdx = #{vo.subMenuIdx};
	</update>
	
	<update id="setRatingUpdateOk">
		update rating set reviewStar = #{vo.reviewStar}, title = #{vo.title}, content = #{vo.content} where idx = #{vo.idx};
	</update>
	
	<update id="setReplyDeleteUpdate">
		update ratingreply set content = '[삭제된 댓글입니다.]', replylevel = 3 where idx = #{idx};
	</update>
	
	<update id="setRatingReplyUpdate">
		update ratingreply set content = #{vo.content}  where idx = #{vo.idx};
	</update>
	
	<update id="setStorePwdUpdate">
		update store set storePwd = #{storePwd}  where storeMid = #{storeMid};
	</update>
	
	<update id="setReportRating">
		update rating set reportRating = reportRating + 1, reportRatingMid = concat(#{mid},'/')  where idx = #{idx};
	</update>
	
	<update id="setReportReply">
		update ratingreply set reportCnt = reportCnt + 1, reportMid = concat(#{mid},'/')  where idx = #{idx};
	</update>
	
	<update id="setStoreUpdate">
		update store set storeName = #{vo.storeName}, storePart = #{vo.storePart}, storeNumber = #{vo.storeNumber}, HostName = #{vo.HostName}, storeAddress = #{vo.storeAddress}, logoPhoto = #{vo.logoPhoto}, storeEmail = #{vo.storeEmail}, storeLatitude = #{vo.storeLatitude}, storeLongitude = #{vo.storeLongitude}, storeTime = #{vo.storeTime}, deliverCost = #{vo.deliverCost}, minPrice = #{vo.minPrice}  where idx = #{vo.idx};
	</update>
		
	<update id="setStoreDelete">
		update store set storeDel = 'OK' where storeMid = #{storeMid};
	</update>
	
	
	<delete id="setStoreSubMenuDeletePost">
		delete from storeFoodSubMenu where foodName = #{foodName};
	</delete>
	
	<delete id="setStoreMenuDeletePost">
		delete from storeFoodMenu where foodName = #{foodName} and admintag = 'O';
	</delete>
	
	<delete id="setStoreMenuDeleteOk">
		delete from cart where menuIdx = #{menuIdx};
		delete from wishlist where menuIdx = #{menuIdx};
		delete from storeFoodMenu where menuIdx = #{menuIdx};
	</delete>
	
	<delete id="storefoodTagDelete">
		delete from storetag where foodTag = #{foodTag};
	</delete>
	
	<delete id="setStoreSubMenuDelete">
		delete from storefoodsubmenu where subMenuIdx = #{subMenuIdx};
	</delete>
	
	<delete id="setRatingDeleteOk">
		delete from rating where idx = #{idx};
	</delete>
	
	<delete id="setReplyDelete">
		delete from ratingreply where idx = #{idx};
	</delete>
	
	<delete id="setRatingReplyDeleteAll">
		delete from ratingreply where ratingIdx = #{idx};
	</delete>
	
</mapper>